CREATE TABLE MEAL (
  NAME VARCHAR(255),
  PRICE DOUBLE,
  CALORIES INT
);

CREATE TABLE INGREDIENT (
  NAME VARCHAR(255),
  CONTAINS_LACTOSE BOOLEAN,
  VEGETARIAN BOOLEAN,
  VEGAN BOOLEAN,
  GLUTEN_FREE BOOLEAN
);

INSERT INTO MEAL(NAME, PRICE, CALORIES)
VALUES ('Spaghetti Bolognese', 12.99, 600),
('Grilled Chicken Sandwich', 8.99, 400),
('Pesto Pasta', 10.99, 550),
('Steak and Mash', 19.99, 800),
('Sushi Platter', 15.99, 700);

INSERT INTO INGREDIENT (NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES('Eggs', false, true, false, true),
('Bread', false, true, true, false),
('Beef Patty', false, false, false, true),
('Lettuce', false, true, true, true),
('Yoghurt', true, true, false, true);

CREATE TABLE MEAL_ORDER (
  TIME_MEAL_ORDERED TIMESTAMP DEFAULT NOW(),
  MEAL_NAME VARCHAR(255)
);

    INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
    VALUES (NOW(), 'Spaghetti Bolognese'),
    (DATE_ADD(NOW(), INTERVAL 1 HOUR), 'Grilled Chicken Sandwich'),
    (DATE_ADD(NOW(), INTERVAL 2 HOUR), 'Pesto Pasta'),
    (DATE_ADD(NOW(), INTERVAL 3 HOUR), 'Pesto Pasta'),
    (DATE_ADD(NOW(), INTERVAL 4 HOUR), 'Grilled Chicken Sandwich'),
    (DATE_ADD(NOW(), INTERVAL 5 HOUR), 'Pesto Pasta'),
    (DATE_ADD(NOW(), INTERVAL 6 HOUR), 'Spaghetti Bolognese'),
    (DATE_ADD(NOW(), INTERVAL 7 HOUR), 'Pesta Pasta'),
    (DATE_ADD(NOW(), INTERVAL 8 HOUR), 'Pesto Pasta'),
    (DATE_ADD(NOW(), INTERVAL 9 HOUR), 'Spaghetti Bolognese');

    CREATE VIEW MEAL_ORDER_WITH_DETAILS AS
    SELECT MO.*, M.PRICE, M.CALORIES FROM MEAL_ORDER MO, MEAL M
    WHERE MO.MEAL_NAME = M.NAME;

    ----------------------------------------------------------------------------------
1.
SELECT MEAL_NAME,
COUNT(*) AS TIMES_MEAL_ORDERER
FROM MEAL_ORDER_WITH_DETAILS
GROUP BY MEAL_NAME
ORDER BY TIMES_MEAL_ORDERER DESC;

2.
SELECT * ,
SUM(PRICE) AS TOTAL_REVENUE_EUR
FROM MEAL_ORDER_WITH_DETAILS
WHERE PRICE > 15;

3.
SELECT MEAL_NAME,
COUNT(*) AS TIMES_MEAL_ORDERER
FROM MEAL_ORDER_WITH_DETAILS
WHERE CALORIES > 500
GROUP BY MEAL_NAME;

4.
SELECT MEAL_NAME,
COUNT(*) AS TIMES_MEAL_ORDERER,
SUM(PRICE) AS TOTAL_REVENUE_EUR
FROM MEAL_ORDER_WITH_DETAILS
WHERE LOWER(MEAL_NAME) LIKE 's%'
GROUP BY MEAL_NAME
ORDER BY TOTAL_REVENUE_EUR DESC;

5.
SELECT TIME_MEAL_ORDERED, MEAL_NAME,
COUNT(*) AS TIMES_MEAL_ORDERER
FROM MEAL_ORDER_WITH_DETAILS
WHERE TIME_MEAL_ORDERED < '2023-05-13T18:00:00Z'  LA DATA VA CAMBIATA IN BASE AL GIORNO PER VEDERE SE FUNZIONA
GROUP BY TIME_MEAL_ORDERED;