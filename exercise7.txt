CREATE TABLE MEAL (
  NAME VARCHAR(255),
  PRICE DOUBLE,
  CALORIES INT
);

CREATE TABLE INGREDIENT (
  NAME VARCHAR(255),
  CONTAINS_LACTOSE BOOLEAN,
  VEGETARIAN BOOLEAN,
  VEGAN BOOLEAN,
  GLUTEN_FREE BOOLEAN
);

INSERT INTO MEAL(NAME, PRICE, CALORIES)
VALUES ('Spaghetti Bolognese', 12.99, 600),
('Grilled Chicken Sandwich', 8.99, 400),
('Pesto Pasta', 10.99, 550),
('Steak and Mash', 19.99, 800),
('Sushi Platter', 15.99, 700);

INSERT INTO INGREDIENT (NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES('Eggs', false, true, false, true),
('Bread', false, true, true, false),
('Beef Patty', false, false, false, true),
('Lettuce', false, true, true, true),
('Yoghurt', true, true, false, true);

CREATE TABLE MEAL_ORDER (
  TIME_MEAL_ORDERED TIMESTAMP DEFAULT NOW(),
  MEAL_NAME VARCHAR(255)
);

    INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
    VALUES (NOW(), 'Spaghetti Bolognese'),
    (DATE_ADD(NOW(), INTERVAL 1 HOUR), 'Grilled Chicken Sandwich'),
    (DATE_ADD(NOW(), INTERVAL 2 HOUR), 'Pesto Pasta'),
    (DATE_ADD(NOW(), INTERVAL 3 HOUR), 'Pesto Pasta'),
    (DATE_ADD(NOW(), INTERVAL 4 HOUR), 'Grilled Chicken Sandwich'),
    (DATE_ADD(NOW(), INTERVAL 5 HOUR), 'Pesto Pasta'),
    (DATE_ADD(NOW(), INTERVAL 6 HOUR), 'Spaghetti Bolognese'),
    (DATE_ADD(NOW(), INTERVAL 7 HOUR), 'Pesta Pasta'),
    (DATE_ADD(NOW(), INTERVAL 8 HOUR), 'Pesto Pasta'),
    (DATE_ADD(NOW(), INTERVAL 9 HOUR), 'Spaghetti Bolognese');

    CREATE VIEW MEAL_ORDER_WITH_DETAILS AS
    SELECT MO.*, M.PRICE, M.CALORIES FROM MEAL_ORDER MO, MEAL M
    WHERE MO.MEAL_NAME = M.NAME;

    INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
        VALUES (NOW(), 'Spaghetti Bolognese'),
        (DATE_ADD(NOW(), INTERVAL 1 HOUR), 'Grilled Chicken Sandwich'),
        (DATE_ADD(NOW(), INTERVAL 2 HOUR), 'Pesto Pasta'),
        (DATE_ADD(NOW(), INTERVAL 3 HOUR), 'Steak and Mash'),
        (DATE_ADD(NOW(), INTERVAL 4 HOUR), 'Spaghetti Bolognese'),
        (DATE_ADD(NOW(), INTERVAL 5 HOUR), 'Sushi Platter'),
        (DATE_ADD(NOW(), INTERVAL 6 HOUR), 'Pesto Pasta'),
        (DATE_ADD(NOW(), INTERVAL 7 HOUR), 'Spaghetti Bolognese'),
        (DATE_ADD(NOW(), INTERVAL 8 HOUR), 'Steak and Mash'),
        (DATE_ADD(NOW(), INTERVAL 9 HOUR), 'Grilled Chicken Sandwich'),
        (DATE_ADD(NOW(), INTERVAL 10 HOUR), 'Spaghetti Bolognese'),
        (DATE_ADD(NOW(), INTERVAL 11 HOUR), 'Pesto Pasta'),
        (DATE_ADD(NOW(), INTERVAL 12 HOUR), 'Sushi Platter'),
        (DATE_ADD(NOW(), INTERVAL 13 HOUR), 'Spaghetti Bolognese'),
        (DATE_ADD(NOW(), INTERVAL 14 HOUR), 'Steak and Mash'),
        (DATE_ADD(NOW(), INTERVAL 15 HOUR), 'Grilled Chicken Sandwich'),
        (DATE_ADD(NOW(), INTERVAL 16 HOUR), 'Sushi Platter'),
        (DATE_ADD(NOW(), INTERVAL 17 HOUR), 'Steak and Mash'),
        (DATE_ADD(NOW(), INTERVAL 18 HOUR), 'Spaghetti Bolognese'),
        (DATE_ADD(NOW(), INTERVAL 19 HOUR), 'Grilled Chicken Sandwich'),
        (DATE_ADD(NOW(), INTERVAL 20 HOUR), 'Pesto Pasta'),
        (DATE_ADD(NOW(), INTERVAL 21 HOUR), 'Sushi Platter'),
        (DATE_ADD(NOW(), INTERVAL 22 HOUR), 'Steak and Mash');
------------------------------------------------------------------------------------

1.
SELECT MEAL_NAME, MAX(PRICE) FROM MEAL_ORDER_WITH_DETAILS
WHERE CALORIES > 500
GROUP BY MEAL_NAME;

2.
SELECT MEAL_NAME, PRICE, AVG(CALORIES) FROM MEAL_ORDER_WITH_DETAILS
WHERE PRICE > 15
GROUP BY MEAL_NAME , PRICE;

3.
SELECT MEAL_NAME, MAX(PRICE) AS MAX_PRICE
FROM MEAL_ORDER_WITH_DETAILS
GROUP BY MEAL_NAME
HAVING MAX_PRICE;

4.
SELECT MEAL_NAME, PRICE, AVG(PRICE) AS AVERAGE_PRICE
FROM MEAL_ORDER_WITH_DETAILS
GROUP BY MEAL_NAME, PRICE
HAVING PRICE < AVERAGE_PRICE;

5. Write a query to select all meals that have a price lower than the average price and have more than 600 calories
    HO RIPORTATO LA CONSEGNA DELL'ESERCIZIO PERCHE' PENSO RICHIEDA QUELLO SCRITTO SOTTO MA NON ESISTE UN PASTO CON COSTO INFERIORE ALLA MEDIA E CALORIE
    SUPERIORI A 600 QUINDI NON USCIRA' NESSUN DATO DALLA TABELLA. HO FATTO UNA VERIFICA INSERENDO 300 AL POSTO DI 600 E FUNZIONA.

SELECT MEAL_NAME, PRICE, AVG(PRICE) AS AVERAGE_PRICE
FROM MEAL_ORDER_WITH_DETAILS
WHERE CALORIES > 600
GROUP BY MEAL_NAME, PRICE
HAVING PRICE < AVERAGE_PRICE;

PROVATI SU DBEAVER NON ESCE NULLA. PERCHÃ¨
